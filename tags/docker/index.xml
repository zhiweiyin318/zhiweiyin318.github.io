<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Zhiwei Yin</title>
    <link>https://zhiweiyin318.github.io/tags/docker/</link>
    <description>Recent content in Docker on Zhiwei Yin</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>zhiweiyin@hotmail.com (Zhiwei Yin)</managingEditor>
    <webMaster>zhiweiyin@hotmail.com (Zhiwei Yin)</webMaster>
    <lastBuildDate>Tue, 18 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhiweiyin318.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《深入剖析Kubernetes》-学习笔记-Kubernetes</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-18-kubernetes-note-kubernetes/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-18-kubernetes-note-kubernetes/</guid>
      <description>容器的本质 容器实际上是一个Linux Namespace、Linux Cgroups和rootfs三种技术构造出来的进程的隔离环境。 1. 容器的静态</description>
    </item>
    
    <item>
      <title>《深入剖析Kubernetes》-学习笔记-Image</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-12-kubernetes-note-image/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-12-kubernetes-note-image/</guid>
      <description>mount namespace “左耳朵耗子” 叔的一篇将docker的Namespace的文章，文章地址：https://coolshell.cn/articles/1</description>
    </item>
    
    <item>
      <title>《深入剖析Kubernetes》-学习笔记-exec-volume</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-12-kubernetes-note-exec-volume/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-12-kubernetes-note-exec-volume/</guid>
      <description>docker exec 是怎么进入容器的？ 容器进程python2，docker exec又重新拉起来了进程跟python2进程都是docker-container</description>
    </item>
    
    <item>
      <title>Python docker-client</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-11-python-docker-client/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-11-python-docker-client/</guid>
      <description>简单记录哈python的docker client的使用。 &amp;gt; 官方文档： &amp;gt; https://docker-py.readthedocs.io/en/stable/client.html &amp;gt; https://docs.docker.com/develop/sdk/examples/ &amp;gt; demo地址： &amp;gt; https://github.com/zhiweiyin318/yzw.python.demo/tree/master/dockerclient 安装 $ pip install docker 使用 client 初始化 需要先创建一个Doc</description>
    </item>
    
    <item>
      <title>《深入剖析Kubernetes》-学习笔记-Cgroups-Namespace</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-10-kubernetes-note-cgroups-namepspace/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-10-kubernetes-note-cgroups-namepspace/</guid>
      <description>概述 容器其实就是一种沙盒技术的，沙盒就像集装箱一样，把应用装起来，应用于应用之间，有了边界，互不干扰，而且方便被搬来搬去，这就是PaaS最理</description>
    </item>
    
    <item>
      <title>《深入剖析Kubernetes》-学习笔记-History</title>
      <link>https://zhiweiyin318.github.io/post/2018-09-09-kubernetes-note-history/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhiweiyin@hotmail.com (Zhiwei Yin)</author>
      <guid>https://zhiweiyin318.github.io/post/2018-09-09-kubernetes-note-history/</guid>
      <description>我是2017年误打误撞的掉进了云计算这个坑里，上来就是Docker，Mesos，Kubernetes，现在主要从事Kubernetes相关工</description>
    </item>
    
  </channel>
</rss>